seed: 42


# Models are instantiated using skrl's model instantiator utility
# https://skrl.readthedocs.io/en/latest/api/utils/model_instantiators.html
models:
  separate: True
  policy:  # see gaussian_model parameters
    class: GaussianMixin
    clip_actions: False
    clip_log_std: True
    min_log_std: -20.0
    max_log_std: 2.0
    initial_log_std: 0.0
    network:
      - name: net_layer_1
        input: STATES
        layers: [64]
        activations: elu
      - name: net_layer_2
        input: net_layer_1
        layers: [64]
        activations: elu
      - name: net_output_layer
        input: net_layer_2
        layers: [self.num_actions]
    output: torch.tanh(ACTIONS)
  critic_1:  # see deterministic_model parameters
    class: DeterministicMixin
    clip_actions: False
    network:
      - name: net
        input: STATES
        layers: [64, 64]
        activations: elu
    output: ONE
  critic_2:  # see deterministic_model parameters
    class: DeterministicMixin
    clip_actions: False
    network:
      - name: net
        input: STATES
        layers: [64, 64]
        activations: elu
    output: ONE
  target_critic_1:  # see deterministic_model parameters
    class: DeterministicMixin
    clip_actions: False
    network:
      - name: net
        input: STATES
        layers: [64, 64]
        activations: elu
    output: ONE
  target_critic_2:  # see deterministic_model parameters
    class: DeterministicMixin
    clip_actions: False
    network:
      - name: net
        input: STATES
        layers: [64, 64]
        activations: elu
    output: ONE


# Rollout memory
# https://skrl.readthedocs.io/en/latest/api/memories/random.html
memory:
  class: RandomMemory
  memory_size: 2048  # automatically determined (same as agent:rollouts)


# PPO agent configuration (field names are from PPO_DEFAULT_CONFIG)
# https://skrl.readthedocs.io/en/latest/api/agents/ppo.html
agent:
  class: SAC
  gradient_steps: 1
  batch_size: 256

  discount_factor: 0.99
  polyak: 0.005
  actor_learning_rate: 1.0e-03    # actor learning rate
  critic_learning_rate: 1.0e-03   # critic learning rate
  learning_rate_scheduler: KLAdaptiveLR        # learning rate scheduler class (see torch.optim.lr_scheduler)
  learning_rate_scheduler_kwargs:
    kl_threshold: 0.01  # learning rate scheduler's kwargs (e.g. {"step_size": 1e-3})

  state_preprocessor: RunningStandardScaler
  state_preprocessor_kwargs: null
  value_preprocessor: RunningStandardScaler
  value_preprocessor_kwargs: null

  random_timesteps: 0          # random exploration steps
  learning_starts: 0          # learning starts after this many steps

  grad_norm_clip: 1.0            # clipping coefficient for the norm of the gradients

  learn_entropy: True          # learn entropy
  entropy_learning_rate: 1.0e-03  # entropy learning rate
  initial_entropy_value: 0.2   # initial entropy value
  # target_entropy: None         # target entropy

  # rewards_shaper: None         # rewards shaping function: Callable(reward, timestep, timesteps) -> reward

  mixed_precision: False       # enable automatic mixed precision for higher performance

  # logging and checkpoint
  experiment:
    directory: "reach_lynx_sac"
    experiment_name: ""
    write_interval: auto
    checkpoint_interval: auto


# Sequential trainer
# https://skrl.readthedocs.io/en/latest/api/trainers/sequential.html
trainer:
  class: SequentialTrainer
  timesteps: 24000
  environment_info: log
